{"name":"indix-api-nodejs","version":"0.2.1","description":"Indix API NodeJS Client","main":"lib/indix-api.js","scripts":{"tdd":"mocha test/*-test.js --compilers js:babel-register --watch","test":"mocha test/*-test.js --compilers js:babel-register --timeout 5000","coverage":"babel-node ./node_modules/.bin/isparta cover _mocha","build":"babel src -d lib","examples":"babel-node examples/example.js"},"license":"Refer to Terms of Service.pdf","devDependencies":{"babel-cli":"^6.9.0","babel-preset-es2015":"^6.6.0","chai":"^3.5.0","chai-fuzzy":"^1.6.1","isparta":"^4.0.0","istanbul":"^0.4.3","mocha":"^2.4.5"},"dependencies":{"byline":"^4.2.1","config":"^1.21.0","debug":"^2.6.1","lodash":"^4.12.0","nock":"^8.0.0","promise":"^7.1.1","request":"^2.72.0"},"gitHead":"ec9ad0d8a2429c94e32e9b2785af09a0ee46eec0","versions":[{"number":"0.1.0","date":"2016-05-18T10:18:36.780Z"},{"number":"0.1.1","date":"2016-05-18T10:27:06.600Z"},{"number":"0.1.2","date":"2016-05-18T10:40:04.521Z"},{"number":"0.1.3","date":"2016-05-18T10:44:04.226Z"},{"number":"1.1.17","date":"2016-06-01T07:52:06.400Z"},{"number":"0.1.20","date":"2016-06-01T07:58:25.516Z"},{"number":"0.1.29","date":"2016-08-18T04:00:02.759Z"},{"number":"0.1.30","date":"2016-08-18T05:54:26.257Z"},{"number":"0.1.31","date":"2016-08-25T06:52:52.910Z"},{"number":"0.1.32","date":"2016-11-17T11:37:21.733Z"},{"number":"0.2.0","date":"2016-11-18T05:11:30.698Z"},{"number":"0.2.1","date":"2017-03-23T07:25:43.528Z"}],"readme":"# Indix API NodeJS Client\nThis is an API client library for the Indix API written in NodeJS. For detailed documentation, please visit the [Indix Developer Portal](https://developer.indix.com/).\n\n## Requirements\nNode v5.0.0 or later\n\n## Installation\nRun the following command in your NodeJS project directory to download and install the API client.\n```\nnpm install indix-api-nodejs --save\n```\n\n## Usage\nThe client needs to be first instantiated with the appropriate application id and key to be able to use the different api endpoints.\n```js\nvar ixClient = require('indix-api-nodejs');\nixClient.init({\n  appKey: 'APP_KEY'\n});\n```\nVisit [developer.indix.com](the Indix developer portal) to get your own App ID and Key.\n\n## Search for Brands, Stores or Categories\n### Brands\n```js\nvar query = { q: 'Nike' }\nixClient.getBrands(query).then(function(results){\n  console.log(results[0]); // would print { id: 5572, name: 'Nike' }\n});\n```\n### Stores\n```js\nvar query = { q: 'Amazon.com' }\nixClient.getStores(query).then(function(results){\n  console.log(results[0]); // would print { id: 270, name: 'Amazon.com Marketplace', countryCode: 'US' }\n});\n```\n### Categories\n*Note: This endpoint downloads all categories. This is not a search end point.*\n```js\nixClient.getCategories().then(function(results){\n  console.log(results[0]); // would print { id: 10161, idPath: \"10161\", name: 'Computers & Accessories', namePath: 'Computers & Accessories' }\n});\n```\n\n## Search suggestions\n```js\nvar query = { q: 'red', countryCode: 'US' }\nixClient.getSearchSuggestions(query).then(function(results){\n  console.log(results[0]); // would be 'red'\n});\n```\n\n## Search for products\n```js\nvar query = { q: 'nike', countryCode: 'US' }\nixClient.getProductSummary(query).then(function(results){\n  console.log(results[0]); // would print the product information of the first product\n  console.log(results[0].mpid); // would print the mpid of the first product\n});\n```\nList of all methods, each of which will return different types of product information.\n```js\nixClient.getProductSummary();\nixClient.getProductOffersStandard();\nixClient.getProductOffersPremium();\nixClient.getProductCatalogStandard();\nixClient.getProductCatalogPremium();\nixClient.getProductUniversal();\n```\n\n## Lookup a specific product\n```js\nvar query = { mpid: '8e1d8cd338ada38624d2f9322b259402', countryCode: 'US' }\nixClient.getProductLookupSummary(query).then(function(result){\n  console.log(result); // would print the product information of the product\n  console.log(result.mpid); // would print the mpid of the product\n});\n```\nList of all methods, each of which will return different types of product information.\n```js\nixClient.getProductLookupSummary();\nixClient.getProductLookupOffersStandard();\nixClient.getProductLookupOffersPremium();\nixClient.getProductLookupCatalogStandard();\nixClient.getProductLookupCatalogPremium();\nixClient.getProductLookupUniversal();\n```\n\n## Bulk processing\nThe API supports processing a large volume of products at once. This is an asynchronous process and requires a 3 step process:\n\n1. Submit a query, which returns a `Job ID`.\n2. Poll for the job status until it is complete.\n3. Once complete, download the products.\n\n## Bulk search for products\n### Submit a query\n```js\nvar query = { storeId: [68], countryCode: 'US' }\nixClient.getBulkProductSummary(query).then(function(jobInfo){\n  console.log(jobInfo); // would be like { id: 1234, status: 'SUBMITTED' }\n});\n```\n\nList of all methods, each of which will return different types of product information.\n```js\nixClient.getBulkProductSummary();\nixClient.getBulkProductOffersStandard();\nixClient.getBulkProductOffersPremium();\nixClient.getBulkProductCatalogStandard();\nixClient.getBulkProductCatalogPremium();\nixClient.getBulkProductUniversal();\n```\n\n### Poll for job status\n```js\nixClient.getJobStatus(1234).then(function(jobInfo){\n  console.log(jobInfo); // would be like { id: 1234, status: 'COMPLETED', count: 10000 }\n});\n```\n\n### Download the products\n```js\nixClient.downloadProducts(1234).then(function(results){\n  console.log(results[0]); // would print the product information of the first product\n  console.log(results[0].mpid); // would print the mpid of the first product\n});\n```\n\n## Bulk lookup specific set of products\n### Submit a query\n```js\nvar query = {\n  inputFile: fs.createReadStream('test/stubs/bulk-job-input.txt', 'utf8'), // Refer to examples below for format\n  countryCode: 'US'\n}\nixClient.getBulkProductLookupSummary(query).then(function(jobInfo){\n  console.log(jobInfo); // would be like { id: 1234, status: 'SUBMITTED' }\n});\n```\n\nList of all methods, each of which will return different types of product information.\n```js\nixClient.getBulkProductLookupSummary();\nixClient.getBulkProductLookupOffersStandard();\nixClient.getBulkProductLookupOffersPremium();\nixClient.getBulkProductLookupCatalogStandard();\nixClient.getBulkProductLookupCatalogPremium();\nixClient.getBulkProductLookupUniversal();\n```\n\n### Input File Formats\n#### MPN with Brand ID\n```\n{ \"mpn\": \"1281HTWR\", \"brandId\": 28860 }\n{ \"mpn\": \"5121412LMR\", \"brandId\": 6553 }\n{ \"mpn\": \"S-19141SIL\", \"brandId\": 2579 }\n{ \"mpn\": \"2000157819\", \"brandId\": 48162 }\n```\n\n#### SKU with Store ID\n```\n{ \"sku\": \"228-10245\", \"storeId\": 311 }\n{ \"sku\": \"228-10255\", \"storeId\": 311 }\n{ \"sku\": \"29G-00752\", \"storeId\": 311 }\n{ \"sku\": \"29G-00754\", \"storeId\": 311 }\n{ \"sku\": \"29G-01030\", \"storeId\": 311 }\n```\n\n### UPC\n```\n{ \"upc\": 80196294216 }\n{ \"upc\": 92325000018 }\n{ \"upc\": 844660084877 }\n{ \"upc\": 14389642713 }\n{ \"upc\": 14389642720 }\n```\n\n### Polling for job and downloading products\nThis is exactly the same as mentioned in the `Bulk search for products` section. Please refer to that above.\n","created":"2016-05-18T10:18:36.780Z","modified":"2017-06-09T08:50:07.391Z","lastPublisher":{"name":"gprasannah","email":"exchequer598@gmail.com"},"owners":[{"name":"bethleha","email":"bethleha@gmail.com"},{"name":"gprasannah","email":"exchequer598@gmail.com"},{"name":"praveenselvam","email":"praveen.selvam@gmail.com"},{"name":"vasanthgopal","email":"vasanth@indix.com"}],"other":{"_attachments":{},"_from":".","_id":"indix-api-nodejs","_nodeVersion":"7.7.2","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/indix-api-nodejs-0.2.1.tgz_1490253941514_0.6966067450121045"},"_npmUser":{"name":"gprasannah","email":"exchequer598@gmail.com"},"_npmVersion":"4.4.2","_rev":"7-fb482a8177c0139e63b5dbe9fe19d1b6","_shasum":"a540c82cb14510588b155c4fbc218cae3d841009","author":{"name":"Indix"},"directories":{},"dist-tags":{"latest":"0.2.1"},"dist":{"shasum":"a540c82cb14510588b155c4fbc218cae3d841009","tarball":"https://registry.npmjs.org/indix-api-nodejs/-/indix-api-nodejs-0.2.1.tgz"},"maintainers":[{"name":"bethleha","email":"bethleha@gmail.com"},{"name":"gprasannah","email":"exchequer598@gmail.com"},{"name":"praveenselvam","email":"praveen.selvam@gmail.com"},{"name":"vasanthgopal","email":"vasanth@indix.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-09T08:50:07.391Z","created":"2016-05-18T10:18:36.780Z","0.1.0":"2016-05-18T10:18:36.780Z","0.1.1":"2016-05-18T10:27:06.600Z","0.1.2":"2016-05-18T10:40:04.521Z","0.1.3":"2016-05-18T10:44:04.226Z","1.1.17":"2016-06-01T07:52:06.400Z","0.1.20":"2016-06-01T07:58:25.516Z","0.1.29":"2016-08-18T04:00:02.759Z","0.1.30":"2016-08-18T05:54:26.257Z","0.1.31":"2016-08-25T06:52:52.910Z","0.1.32":"2016-11-17T11:37:21.733Z","0.2.0":"2016-11-18T05:11:30.698Z","0.2.1":"2017-03-23T07:25:43.528Z"}}}