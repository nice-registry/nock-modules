{"name":"loggerware","version":"1.1.3","description":"An express middleware for application access and error logs","main":"index.js","license":"MIT","keywords":["bunyan","express","logging","morgan","syslog"],"scripts":{"test":"./bin/test"},"ava":{"files":["./test/**/*.test.js"],"tap":false,"failFast":false},"repository":"https://github.com/agreco/loggerware","dependencies":{"ava":"^0.15.2","bunyan":"^1.8.1","express-bunyan-logger":"^1.2.0","morgan":"^1.7.0","nock":"^8.0.0"},"gitHead":"ad7409c7bbf49062f76cc024a7e4dfce899e1675","homepage":"https://github.com/agreco/loggerware#readme","versions":[{"number":"1.0.0","date":"2016-05-05T11:00:28.868Z"},{"number":"1.0.1","date":"2016-05-05T11:03:27.997Z"},{"number":"1.0.2","date":"2016-05-05T12:41:47.482Z"},{"number":"1.0.3","date":"2016-05-05T12:57:22.312Z"},{"number":"1.0.4","date":"2016-05-09T12:30:34.570Z"},{"number":"1.0.5","date":"2016-05-11T20:12:48.230Z"},{"number":"1.0.6","date":"2016-06-06T10:47:11.398Z"},{"number":"1.1.0","date":"2016-06-06T13:41:43.712Z"},{"number":"1.1.1","date":"2016-06-06T13:56:30.789Z"},{"number":"1.1.2","date":"2016-12-01T09:10:27.316Z"},{"number":"1.1.3","date":"2017-03-12T14:40:04.511Z"}],"readme":"#loggerware\n\n_An express middleware for application access and error logs_\n\n**loggerware** listens to every request, logging to `STDOUT` and `STDERR` for access and error logging respectively. It does\nnot manipulate any request or response.\n\n##Quick Start\n\nAdd the package to your project:\n\n```bash\n$ npm install loggerware\n```\n\nRequire loggerware and register your access and error loggers, like the following*:\n\n```javascript\nvar express = require('express'),\n    loggerware = require('loggerware')({ name: 'your-logger' }),\n    app = express();\n\napp.use(loggerware.register('access', { // Register access loggerware\n    file: '/var/tmp/your-access.log'\n}));\n\napp.use('/', require('./routes/index'));\napp.use('/healthcheck', require('./routes/healthcheck'));\napp.use('/oauth', require('./routes/oauth'));\n\napp.use(loggerware.register('error', { // Register error loggerware\n    file: '/var/tmp/your-error.log'\n}));\n\napp.use(function (err, req, res, next) { // Register error handler\n    res.status(err.status || 500);\n    if (req.xhr) res.json({ error: err.message });\n    else res.render('internal-error');\n});\n\napp.listen(port, function () {\n    loggerware.info('Server started on http://localhost:%s', port);\n});\n```\n*Order matters here, for more information on middleware placement goto: [http://expressjs.com/en/guide/using-middleware.html](http://expressjs.com/en/guide/using-middleware.html)\n\n##Guide\n\n####Creating a logger\nRequiring **loggerware** will return a method that creates a [bunyan](https://www.npmjs.com/package/bunyan) logger and exposes extra functionality for creating and registering loggers.\n\nSo, executing the following:\n\n``` javascript\nvar loggerware = require('loggerware')({ name: 'your-logger' });\n```\n\nwill give you:\n- `loggerware.create` _create additional loggers for your application_\n- `loggerware.register` _register access and error loggers for your application_\n\nfrom here onwards, you have enough of an interface for registering and creating loggers for your application.\n\nIf there is a need to, you can create more that one logger by using the `loggerware.create` method:\n\n```javascript\nvar loggerware = require('loggerware')({ 'name': 'your-logger'}),\n    loggerA = loggerware.create({ name: 'your-logger-a' }),\n    loggerB = loggerware.create({ name: 'your-logger-b' });;\n```\n\nThe `loggerware.create` signature is `create([, configuration :: Object])`.\n\n- The optional `configuration` parameter gets passed to the `bunyan.createLogger` method. See the [bunyan.createLogger](https://www.npmjs.com/package/bunyan#constructor-api) api for more details.\n\n####Registering access and error loggers\nOnce you have instantiated a logger, you can register access and error loggers for your application by using the `loggerware.register` method.\n\nThe following registers two loggers to the default logger:\n\n``` javascript\nvar loggerware = require('loggerware')({ name: 'your-logger' });\n\nloggerware.register('access', {\n    name: 'your-access',\n    file: '/var/tmp/your-access.log'\n});\n\nloggerware.register('error');\n```\n\nIn this example we:\n\n1. created a logger called `your-logger`\n2. registered an access logger called `your-access` that streams to `STDOUT` and to the file `/var/tmp/your-access.log`\n3. registered an error logger streaming just to `STDERR`.\n\nThe `loggerware.register` signature is `register(type :: String, [, configuration :: Object])`.\n\nThe `type` parameter value can either be `access` or `error`.\n\nThe optional `configuration` object parameter can consist of `format` and `file` keys.\n\n- The `format` key specifies the [morgan](https://www.npmjs.com/package/morgan) logger format, by default `combined` is used.\n- The `file` key specifies the file to log to. If no `file` key is supplied, your logging will just be streamed to `STDOUT` and `STDERR`.\n\n##License\n[MIT](http://www.github.com/agreco/loggerware/LICENSE)\n","starsCount":1,"created":"2016-05-05T11:00:28.868Z","modified":"2017-03-12T14:40:04.511Z","lastPublisher":{"name":"agreco13","email":"agreco13@gmail.com"},"owners":[{"name":"agreco13","email":"agreco13@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"loggerware","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/loggerware-1.1.3.tgz_1489329603886_0.06578591791912913"},"_npmUser":{"name":"agreco13","email":"agreco13@gmail.com"},"_npmVersion":"4.1.2","_rev":"4-5ab8f73edb614faffe6cc9bde4d57c7f","_shasum":"0cb43ec40a519bb083e4fdfe1eb2d3ea656f328a","bugs":{"url":"https://github.com/agreco/loggerware/issues"},"directories":{},"dist-tags":{"latest":"1.1.3"},"dist":{"shasum":"0cb43ec40a519bb083e4fdfe1eb2d3ea656f328a","tarball":"https://registry.npmjs.org/loggerware/-/loggerware-1.1.3.tgz"},"maintainers":[{"name":"agreco13","email":"agreco13@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-12T14:40:04.511Z","created":"2016-05-05T11:00:28.868Z","1.0.0":"2016-05-05T11:00:28.868Z","1.0.1":"2016-05-05T11:03:27.997Z","1.0.2":"2016-05-05T12:41:47.482Z","1.0.3":"2016-05-05T12:57:22.312Z","1.0.4":"2016-05-09T12:30:34.570Z","1.0.5":"2016-05-11T20:12:48.230Z","1.0.6":"2016-06-06T10:47:11.398Z","1.1.0":"2016-06-06T13:41:43.712Z","1.1.1":"2016-06-06T13:56:30.789Z","1.1.2":"2016-12-01T09:10:27.316Z","1.1.3":"2017-03-12T14:40:04.511Z"},"users":{"agreco13":true}}}