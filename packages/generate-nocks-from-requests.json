{"name":"generate-nocks-from-requests","version":"0.1.0","description":"Automatically generate Nock mocks from requests made with Request","main":"dist/index.js","license":"MIT","dependencies":{"request-debug":"^0.2.0"},"devDependencies":{"babel-cli":"^6.18.0","babel-core":"^6.18.2","babel-plugin-transform-flow-strip-types":"^6.18.0","babel-preset-es2015":"^6.18.0","flow-bin":"^0.35.0","flow-typed":"^2.0.0","mocha":"^3.1.2"},"scripts":{"test":"mocha dist/test/","flow":"flow","flow-typed":"flow-typed","build":"babel --presets es2015 --plugins transform-flow-strip-types -d dist src"},"gitHead":"be9821d2662c788a4492a93768c8ad71379208da","versions":[{"number":"0.1.0","date":"2016-12-16T11:09:04.609Z"}],"readme":"# Generate Nocks from Requests â€“ 0.1.0\n\nAutomatically generate [*Nock*](https://www.npmjs.com/package/nock) mocks from requests made with [*Request*](https://www.npmjs.com/package/request).\n\n## Usage\n\nFirst, let's install it. Since you normally don't want GNFR (too lazy to type \"Generate Nocks from Requests\"[^1]) installed permanently, we'll install it like this:\n\n```sh\nnpm i generate-nocks-from-requests\n```\n\nNow lets hook it up:\n\n```js\n/* ... code */\nconst request = require('request')\nrequire('generate-nocks-from-requests')(request)\n/* ... more code */\n```\n\nNow run you're thing and trigger the requests you want to mock. After you'll probably need to kill the process. Now there should be a `mock.js` file in the directory you ran the server from. It contains you're nock mocks ðŸŽ‰.\n\n## API\n\n### default `(Request, Options) => Flush`\n\nThe `default` export is a function taking a `Request` object and `Options` as a parameter and returns the `Flush` function.\n\n### Options `object`\n\nThe default arguments are as follows:\n\n```\n{\n  repeat = 999,\n  delay = 200,\n  output = 'mocks.js',\n  flushOnExit = true\n}\n```\n\n* `repeat`: Controls the argument that is passed to *Nocks* `#times()`.\n* `delay`: Controls the argument passed to *Nocks* `#delay()`.\n* `output`: The file to save the mocks to.\n* `flushOnExit`: Wether or not to flush when the process exits. (see `Flush`)\n\n### Flush `() => void`\n\nWrites all the buffered mocks to the file defined in `options.output`. The `Flush` function is called automatically when the process exits regularly, or it receives one of this signals `SIGTERM`, `SIGHUP`, 'SIGBREAK'. To disable this behaviour, set `flushOnExit: false`.\n\n[^1]: Yes, I did not type it again, but just copy-pasted it over from the header.\n","created":"2016-12-16T11:09:04.609Z","modified":"2016-12-16T11:09:04.609Z","lastPublisher":{"name":"kriegslustig","email":"npm@ls7.ch"},"owners":[{"name":"kriegslustig","email":"npm@ls7.ch"}],"other":{"_attachments":{},"_from":".","_id":"generate-nocks-from-requests","_nodeVersion":"7.2.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/generate-nocks-from-requests-0.1.0.tgz_1481886544067_0.97730433056131"},"_npmUser":{"name":"kriegslustig","email":"npm@ls7.ch"},"_npmVersion":"3.10.10","_rev":"1-e23f82127ab0e3220c26645a640df18a","_shasum":"47dc0181c5ce7cf9ec705457a517f5e49c5a5216","author":{"name":"Luca Nils Schmid","email":"npm@ls7.ch"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"47dc0181c5ce7cf9ec705457a517f5e49c5a5216","tarball":"http://registry.npmjs.org/generate-nocks-from-requests/-/generate-nocks-from-requests-0.1.0.tgz"},"maintainers":[{"name":"kriegslustig","email":"npm@ls7.ch"}],"readmeFilename":"README.md","time":{"modified":"2016-12-16T11:09:04.609Z","created":"2016-12-16T11:09:04.609Z","0.1.0":"2016-12-16T11:09:04.609Z"}}}