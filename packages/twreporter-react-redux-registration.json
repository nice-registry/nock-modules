{"name":"twreporter-react-redux-registration","version":"1.0.0-alpha-0.1","description":"registration sginIn system ","main":"index.js","scripts":{"test":"./node_modules/mocha/bin/mocha $(find src -name '*.test.js') --compilers js:babel-core/register","gulp":"gulp","dev":"NODE_ENV=development npm run gulp","build":"NODE_ENV=production npm run gulp"},"keywords":["registration","signIn","signUp"],"repository":"https://github.com/twreporter/react-redux-registration","license":"ISC","devDependencies":{"babel":"^6.5.2","babel-cli":"^6.24.0","babel-core":"^6.3.21","babel-loader":"^6.2.0","babel-preset-es2015":"^6.13.2","babel-preset-es2017":"^6.22.0","babel-preset-react":"^6.3.13","babel-preset-stage-0":"^6.3.13","concurrently":"^3.4.0","gulp":"^3.9.1","gulp-babel":"^6.1.2","gulp-rename":"^1.2.2"},"dependencies":{"babel-polyfill":"^6.23.0","chai":"^3.3.0","history":"^4.6.1","lodash":"^4.17.4","mocha":"^3.2.0","nock":"^2.17.0","prop-types":"^15.5.10","react":"^15.4.2","react-redux":"^4.4.5","react-router":"^3.0.5","redux":"^3.5.2","redux-mock-store":"^1.0.2","redux-thunk":"^2.2.0","styled-components":"^1.4.4","superagent":"^3.5.1"},"gitHead":"351fcf4447bba498e7dd9672c2ed7a6a0694052f","homepage":"https://github.com/twreporter/react-redux-registration#readme","versions":[{"number":"1.0.0-alpha-0.1","date":"2017-07-28T02:37:17.911Z"}],"readme":"# TW Reporter Registration Package\n\n## Host Project Environment\n* The host project need to contain following:\n  1. react\n  2. redux\n  3. react-router\n  4. express server\n\n* Bonus: The package work with [next.js](https://github.com/zeit/next.js)\n\n## Installation\n```bash\nnpm i --save twreporter-registration\n```\n\n## Work Flow\n\n## List of Containers/Components and Reducers\n\n### Containers\n* ActivePage\n* AuthenticationScreen\n* Features\n* SignInForm\n* SignUpForm\n\n### Components\n* SignOut\n\n### Reducers\n* authReducer\n* configure\n  user has to pass api url initial state obj to configure reducer\n\n```js\nimport { configureReducer } from 'twreporter-registration'\nconst registrationInitialState = {\n  apiUrl: '',\n  signUp: '',\n  signIn: '',\n  activate: '',\n  bookmarkUpdate: '',\n  bookmarkDelete: '',\n  bookmarkGet: '',\n  ping: '',\n  oAuthProviders: {\n    google: '',\n    facebook: '',\n  },\n},\nconst configReducer = configureReducer(registrationInitialState)\nconst rootReducer = combineReducers({\n  authConfigure: configReducer,\n})\n```\n\n## Usage js\n* import containers/components from twreporter-registration to react router js file of your host project. Most of containers is pretty handy, However, some complex containers need specific properties or can only be used in specific circumstances.\n  * AuthenticationScreen: is only for client side\n  * SignInForm has following properties (you can pass properties through react-router or jsx it self.)\n    * title (string): form title\n    * browserHistory (func): browserHistory from router or Router of next.js\n    * **AssignedLink** (func): This one is only for next.js Link\n    * signInRedirectPath (signin):\n    * location: query data for TWReporter GO_API (after oAuth)\n    * domain: query data for TWReporter GO_API (after oAuth)\n    * account (boolean): show SignIn SignUp function\n    * google (boolean): show google function\n    * facebook (boolean): show facebook function\n    * defaultStyle (boolean): with defaultStyle or not (for now the difference is only on frame size and location)\n  * ActivateForm\n    * query: pass your query data from next.js or just put null for react-router\n    * browserHistory: browserHistory of react-router or Router of next.js\n    * activateRedirectPath: '/yourpage'\n\n```js\nimport { SignUpForm, SignInForm, ActivePage, AuthenticationScreen, Features, SignOut } from 'twreporter-registration'\nexport default function (history = browserHistory) {\nreturn (\n <Router history={history} >\n   <Route path=\"/\" component={App}>\n     <IndexRoute component={Home} />\n     <Route\n        path=\"signup\"\n        component={SignUpForm}\n     />\n     <Route\n        path=\"signin\"\n        component={SignInForm}\n        title={'Sign In to TWReporter'}\n        browserHistory={browserHistory}\n        signInRedirectPath = {'/features'}\n        location={'http://testtest.twreporter.org:3000/features'}\n        domain={'twreporter.org'}\n        account={false}\n        facebook={true}\n        google={true}\n        defaultStyle={false}\n     />\n     <Route\n        path=\"activate\"\n        component={ActivePage}\n        query={this.props.query/null}\n        browserHistory={Router}\n        activateRedirectPath={'/content'}\n     />\n     <Route\n        path=\"features\"\n        component={AuthenticationScreen(Features)}\n        redirectPath={'/signin'}\n     />\n     <Route\n        path=\"signout\"\n        component={SignOut}\n     />\n   </Route>\n </Router>\n)\n}\n```\n* import reducers from twreporter-registration to root reducer\n```js\nimport { authReducer, oauthReducer, configureReducer } from 'twreporter-registration'\nconst rootReducer = combineReducers({\n   authConfigure: configureReducer,\n   oauth: oauthReducer,\n   auth: authReducer,\n})\n```\n\n* import actions from from package  \nWe provide you a default structure of path of authentication api server. You only need to\nenter your paths into registrationConfigure obj which is presented at following example.\n```js\n// in your render file\nimport { types, configureAction } from 'twreporter-registration'\nconst registrationConfigure = {\n    apiUrl: 'http://testtest.twreporter.org/8080',\n    signUp: '/v1/signup',\n    signIn: '/v1/login',\n    activate: '/v1/activate',\n    bookmarkUpdate: '',\n    bookmarkDelete: '',\n    bookmarkGet: '',\n    ping: '',\n    oAuthProviders: {\n      google: '/v1/auth/google',\n      facebook: '/v1/auth/facebook'\n    }\n}\n// before render, you have to dispatch configureAction from our package\n// you can to choose either server side or client side rendering\nstore.dispatch(configureAction(registrationConfigure))\nReactDOM.render((\n  <Provider store={store}>\n    <DeviceProvider device={device}>\n      { createRoutes(history) }\n    </DeviceProvider>\n  </Provider>\n), document.getElementById('root'))\n```\n\n* Processing auth_info from Respond/Cookies\n(in your express server)\n```js\nimport { authInfoStringToObj } from 'twreporter-registration'\nlet authInfoObj = authInfoStringToObj(auth_info_string)\nstore.dispatch(authUserAction(authType, authInfoObj))\n```\n\n## Next.js Example\n\n```js\nclass SignIn extends React.Component {\n  static getInitialProps ({ store }) {\n    const registrationConfigure = {\n      apiUrl: 'http://testtest.twreporter.org:8080',\n      signUp: '/v1/signup',\n      signIn: '/v1/login',\n      activate: '/v1/activate',\n      bookmarkUpdate: '',\n      bookmarkDelete: '',\n      bookmarkGet: '',\n      ping: '',\n      oAuthProviders: {\n        google: '/v1/auth/google',\n        facebook: '/v1/auth/facebook'\n      }\n    }\n    store.dispatch(configureAction(registrationConfigure))\n  }\n\n  render() {\n    return (\n      <SignInForm\n        title={'Sign In to Newsletter'}\n        browserHistory={Router}\n        AssignedLink={Link}\n        signInRedirectPath={'/features'}\n        location={'http://testtest.twreporter.org:3000/features'}\n        domain={'twreporter.org'}\n        account={false}\n        facebook={true}\n        google={true}\n        defaultStyle={false}\n      />\n    )\n  }\n}\n```\n\n## Development\n```bash\nnpm run dev   //development mode\nnpm run build //production mode\n```\n\n* advice for developer/programmer:\nYou can program in es2015 + es2017 and only need to edit files in **src** directory.\nAll files will be transpiled through babel-preset-es2017 and transfered to **lib** directory.\n\n* Working On\n1. modify AuthScreen Component to be compatible with next.js\n2. Make Token Manager to be available\n3. Reassemble localStorage data\n","created":"2017-07-28T02:37:17.911Z","modified":"2017-07-28T02:37:17.911Z","lastPublisher":{"name":"twreporter","email":"twreporter25363030@gmail.com"},"owners":[{"name":"twreporter","email":"twreporter25363030@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"twreporter-react-redux-registration","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/twreporter-react-redux-registration-1.0.0-alpha-0.1.tgz_1501209437808_0.374037814559415"},"_npmUser":{"name":"twreporter","email":"twreporter25363030@gmail.com"},"_npmVersion":"4.1.2","_rev":"1-4ad04862ea13bcfa1a2b7dcf9e7e5879","_shasum":"af3b86149a0a6e84373dd84820aaef2a3adc95b0","author":{"name":"hanyulo"},"bugs":{"url":"https://github.com/twreporter/react-redux-registration/issues"},"directories":{},"dist-tags":{"latest":"1.0.0-alpha-0.1"},"dist":{"shasum":"af3b86149a0a6e84373dd84820aaef2a3adc95b0","tarball":"https://registry.npmjs.org/twreporter-react-redux-registration/-/twreporter-react-redux-registration-1.0.0-alpha-0.1.tgz"},"maintainers":[{"name":"twreporter","email":"twreporter25363030@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-07-28T02:37:17.911Z","created":"2017-07-28T02:37:17.911Z","1.0.0-alpha-0.1":"2017-07-28T02:37:17.911Z"}}}