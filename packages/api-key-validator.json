{"name":"api-key-validator","version":"0.1.6","description":"A package to easily validate api keys email, sms, push and web push service providers","main":"lib/index.js","scripts":{"test":"mocha"},"repository":"https://github.com/VennHQ/api-key-validator","keywords":["api","validation","verification","verify","key"],"license":"MIT","homepage":"https://github.com/VennHQ/api-key-validator#readme","devDependencies":{"chai":"^2.3.0","mocha":"^2.2.5","nock":"^1.9.0"},"dependencies":{"chai":"^2.3.0","easynexmo":"^0.6.2","mandrill-api":"^1.0.45","nock":"^1.9.0","nzero-push":"^2.1.2","plivo-node":"^0.2.5","postmark":"^1.0.0","pushbots":"^0.0.1","request":"^2.55.0","sendgrid-extended":"^1.6.5","twilio":"^2.2.0","validate":"^2.1.6"},"gitHead":"e827bb051b6a3457a724e31430a2f0aac9f6455f","versions":[{"number":"0.1.0","date":"2015-05-29T16:32:39.853Z"},{"number":"0.1.1","date":"2015-06-01T17:59:46.062Z"},{"number":"0.1.3","date":"2015-07-01T17:38:58.520Z"},{"number":"0.1.4","date":"2015-07-01T17:45:56.919Z"},{"number":"0.1.5","date":"2015-08-11T00:18:23.067Z"},{"number":"0.1.6","date":"2015-08-11T00:24:40.419Z"}],"readme":"# API Key Validator &nbsp;&nbsp;![image of lock](https://cloud.githubusercontent.com/assets/9973419/7895501/067b4474-0660-11e5-9c3a-d0ef4c141ee2.gif)\n\n[ ![Codeship Status for VennHQ/api-key-validator](https://codeship.com/projects/84e0b4a0-e605-0132-9e91-46daeabcd7f9/status?branch=master)](https://codeship.com/projects/82171)\n\n\nValidate api keys for major email, sms, or push notification providers quickly and easily. Catch the problem early.\n\n\n## Installation\n``` bash\nnpm install api-key-validator\n```\n\n## Validate (serviceName, keys, callback)\n\n|serviceName | keys |\n|------------|---------------------------------------|\n| \"mailgun\"  | {api_key, domain}                    |\n| \"mandrill\" | {api_key}                             |\n| \"postmark\" | {server_key}                          |\n| \"sendgrid\" | {api_user, api_key}                   |\n| \"nexmo\"    | {api_key, api_secret}                 |\n| \"plivo\"    | {auth_id, auth_token}                 |\n| \"sinch\"    | {application_key, application_secret} |\n| \"twilio\"   | {account_sid, auth_token}             |\n| \"onesignal\"| {app_id, api_key}                     |\n| \"parse\"    | {app_id, api_key}                     |\n| \"pushbots\" | {app_id}                              |\n| \"zeropush\" | {server_token}                        |\n\n\n#### Example\n``` javascript\nvar apiKeyValidator = require('api-key-validator');\n\nvar keys = {\n    api_user: \"cx34554cvd234sdfsd34fsdf123123\",\n    api_key: \"2342334534fbdf29sdfsbfbdfsd4\"\n}\n\napiKeyValidator.validate(\"sendgrid\", keys, function(err, result){\n    console.log(err, result);\n});\n\n```\n\n## Development\nWant to add a service not currently supported? Feel free to add it yourself and send a pull request!\n\n#### Install Dependencies\n``` bash\nnpm install\n```\n\n#### Run Examples\n``` bash\nnode example.js\n```\n\n#### Run Tests\n``` bash\nmocha\n```\n\n#### Adding a New Service Provider\n1. Write Failing Tests\n  1. If new service type, create a new test file of the form\n\t\t `test/service_type.js`.\n  2. Copy `test/test_template.js` into the newly created file or\n\t   the file corresponding to the service type of the new provider.\n  3. Follow instructions in the template file to create tests for the new\n\t   service\n2. Create the New Service Provider\n  1. Install the service provider's npm package as a dependency, or hit their rest API through npm request package\n  2. Create a new file of the form `lib/models/services/service_type\n\t   /provider_name.js`\n  3. Decide how you want to test if the provided keys are valid.\n\t\t Refer to the service's api documentation to call a function\n\t\t or hit an end point that will authenticate or result in an error.\n  4. Return a callback making sure that error is null and result is\n\t\t populated if the keys are verified and error is populated and result is\n\t\t null if they are not.\n3. Edit `lib/index.js`\n  1. Require the newly created service provider\n  ```js\n  var ServiceName = require('./providers/service_type/service_name');\n  ```\n  2. Add the newly created service provider to `apiKeyValidator`\n  ``` javascript\n\tif (service == \"service_name\") Service_name.validate(keys);\n  ```\n","starsCount":0,"created":"2015-05-29T16:32:39.853Z","modified":"2015-08-11T00:24:40.419Z","lastPublisher":{"name":"venn","email":"hello@getvenn.io"},"owners":[{"name":"venn","email":"hello@getvenn.io"}],"other":{"_attachments":{},"_from":".","_id":"api-key-validator","_nodeVersion":"0.12.7","_npmUser":{"name":"venn","email":"hello@getvenn.io"},"_npmVersion":"2.11.3","_rev":"1-d200fada1d52bbfaac287c999a4fea06","_shasum":"31ced9285cd28d07ec9ad1665d6de00e9fe27ec4","author":{"name":"Jake Mooney & Tim Giblin"},"bugs":{"url":"https://github.com/VennHQ/api-key-validator/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"0.1.6"},"dist":{"shasum":"31ced9285cd28d07ec9ad1665d6de00e9fe27ec4","tarball":"http://registry.npmjs.org/api-key-validator/-/api-key-validator-0.1.6.tgz"},"maintainers":[{"name":"venn","email":"hello@getvenn.io"}],"readmeFilename":"README.md","time":{"modified":"2015-08-11T00:24:40.419Z","created":"2015-05-29T16:32:39.853Z","0.1.0":"2015-05-29T16:32:39.853Z","0.1.1":"2015-06-01T17:59:46.062Z","0.1.3":"2015-07-01T17:38:58.520Z","0.1.4":"2015-07-01T17:45:56.919Z","0.1.5":"2015-08-11T00:18:23.067Z","0.1.6":"2015-08-11T00:24:40.419Z"},"users":{}}}