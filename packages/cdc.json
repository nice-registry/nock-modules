{"name":"cdc","version":"1.2.0","description":"Consumer Driven Contracts (CDC)","main":"index.js","bin":{"cdc":"./index.js"},"scripts":{"dev":"npm run test:watch","test:watch":"npm test -- -w","test":"nyc ava ./*.spec.js","posttest":"npm run lint","lint":"standard"},"repository":"https://github.com/uldissturms/cdc","keywords":["consumer","driven","contracts"],"license":"MIT","homepage":"https://uldissturms.github.io","devDependencies":{"ava":"^0.18.1","concat-stream":"^1.5.2","nyc":"^10.0.0","standard":"^8.6.0"},"dependencies":{"blue-tape":"^1.0.0","boom":"^4.2.0","commander":"^2.9.0","hapi":"^16.0.1","joi":"^10.0.2","nock":"^9.0.2","node-fetch":"^1.6.3","ramda":"^0.23.0"},"gitHead":"58a2ec8271f93694122ded5102d41fc9d38abf51","readme":"# Consumer Driven Contracts (CDC)\n[![wercker status](https://app.wercker.com/status/edf041d1561206d9d42fd539ad9f0e79/s/master \"wercker status\")](https://app.wercker.com/project/byKey/edf041d1561206d9d42fd539ad9f0e79)\n[![Coverage Status](https://coveralls.io/repos/github/uldissturms/cdc/badge.svg)](https://coveralls.io/github/uldissturms/cdc)\n[![Code Climate](https://codeclimate.com/github/uldissturms/cdc/badges/gpa.svg)](https://codeclimate.com/github/uldissturms/cdc)\n[![Standard - JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n[![Gitter](https://badges.gitter.im/join_chat.svg)](https://gitter.im/consumer-driven-contracts)\n\nCDC provides a way to define mock provider for consumer and verify contracts against provider.\nIt is written in JavaScript, however can be run in any setup using docker.\n\n## Getting started\n\n### Using docker-compose\n```yaml\nversion: '2'\nservices:\n  api:\n    build:\n      context: .\n    depends_on:\n      - dependency\n    command: npm start\n  dependency:\n    image: uldissturms/cdc\n    volumes:\n      - ./contracts/dependency:/usr/app/src/contracts\n    command: mock\n    ports:\n      - \"3000:3000\"\n```\n\nWhere ./contracts/dependency contains index.js that describes contract.\n```\n./contracts\n└── dependency\n    └── index.js\n```\n\n### Using docker\n```\ndocker run -p 3000:3000 -v ${PWD}/contracts:/usr/app/src/contracts uldissturms/cdc mock ./contracts/simple\n```\n\n### Using npm\n```bash\nnpm i cdc\n./node_modules/.bin/cdc mock ./contracts/simple\n./node_modules/.bin/cdc verify ./contracts/simple --baseUrl http://localhost:3000\n```\n\n## Contracts\n\n#### Simple contract with schema validation\n```javascript\nconst joi = require('joi')\n\nmodule.exports = {\n  name: 'simple request/response schema',\n  request: {\n    path: '/api/simple-schema',\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: {\n      hello: 'world'\n    },\n    bodySchema: joi.object().keys({\n      hello: joi.string()\n    })\n  },\n  response: {\n    body: {\n      id: 12345\n    },\n    bodySchema: joi.object().keys({\n      id: joi.number().integer()\n    })\n  }\n}\n```\n#### Response\n```\ncurl localhost:3000/api/simple-schema -H 'content-type: application/json' -d '{\"hello\": \"world\"}'\n```\n``` json\n{\"id\": 12345}\n```\n\n## Usage\n\n[Why I wrote my own](http://uldissturms.github.io/2016/12/28/why-i-wrote-my-own-consumer-driven-contracts-library/)\n\n![](/docs/consumer.png)\n![](/docs/provider.png)\n\n|          | request       | response      |\n| ---------|---------------| --------------|\n| consumer | verify schema | mock          |\n| provider | request       | verify schema |\n\n- `mock` - mocks responses for consumer\n- `verify` - verifies contracts agains provider\n\n### Options\n- mock\n  - --port, -p - port for running mock server, defaults to 3000 (optional)\n  - --no-cors, -C - disable CORS support (optional)\n  - --watch, -w - to watch current directory for contract changes (optional)\n  - --tls, -t - enable [TLS](https://en.wikipedia.org/wiki/Transport_Layer_Security)  with a self signed certificate ( setting `NODE_TLS_REJECT_UNAUTHORIZED=0` when consuming from node might be required )\n- verify\n  - --baseUrl, -b - base url to run verifications against (required)\n\n### Examples\n\nFor more examples take a look at contracts in `./contracts` used for tests.\n\n## Libraries used\n- [Joi](https://npmjs.com/joi) (schema valiations)\n- [Hapi](https://npmjs.com/hapi) (mock provider server)\n- [Tape](https://npmjs.com/tape) (verify consumer contracts against a provider)\n\n## Influences\n- [consumer-contracts](https://www.npmjs.com/consumer-contracts)\n- [mockingjay-server](https://github.com/quii/mockingjay-server)\n- [pact](https://github.com/realestate-com-au/pact)\n- [pacto](https://github.com/thoughtworks/pacto)\n\n## Further reading\n- [Consumer-Driven Contracts: A Service Evolution Pattern](http://martinfowler.com/articles/consumerDrivenContracts.html)\n- [Integration Contract Test](http://martinfowler.com/bliki/IntegrationContractTest.html)\n- [Why I wrote my own](http://uldissturms.github.io/2016/12/28/why-i-wrote-my-own-consumer-driven-contracts-library/)\n\n## Licence\n\nMIT\n","versions":[{"number":"1.0.0","date":"2016-04-06T12:45:16.095Z"},{"number":"0.0.1","date":"2016-12-05T02:04:37.434Z"},{"number":"0.0.2","date":"2016-12-05T02:27:53.175Z"},{"number":"0.0.3","date":"2016-12-05T09:37:37.736Z"},{"number":"0.0.4","date":"2016-12-05T10:06:53.918Z"},{"number":"0.0.5","date":"2016-12-05T10:16:17.401Z"},{"number":"0.0.6","date":"2016-12-05T14:51:32.450Z"},{"number":"0.0.7","date":"2016-12-05T22:44:33.349Z"},{"number":"0.0.8","date":"2016-12-15T09:34:05.912Z"},{"number":"0.0.9","date":"2016-12-15T15:29:02.977Z"},{"number":"0.1.0","date":"2016-12-18T23:02:43.297Z"},{"number":"0.1.1","date":"2016-12-18T23:14:23.523Z"},{"number":"0.1.2","date":"2016-12-22T20:45:16.038Z"},{"number":"1.0.1","date":"2016-12-29T00:01:12.966Z"},{"number":"1.0.2","date":"2016-12-29T15:33:59.669Z"},{"number":"1.0.3","date":"2016-12-29T16:13:55.357Z"},{"number":"1.0.4","date":"2016-12-29T16:40:02.934Z"},{"number":"1.0.5","date":"2016-12-29T16:53:05.195Z"},{"number":"1.0.6","date":"2016-12-29T16:56:13.892Z"},{"number":"1.0.7","date":"2016-12-29T17:46:06.615Z"},{"number":"1.1.0","date":"2016-12-30T17:59:23.153Z"},{"number":"1.1.1","date":"2016-12-30T18:15:00.945Z"},{"number":"1.2.0","date":"2017-02-19T20:00:09.155Z"}],"starsCount":2,"created":"2016-04-06T12:45:16.095Z","modified":"2017-02-19T20:00:09.155Z","lastPublisher":{"name":"uldis.sturms","email":"uldis.sturms@gmail.com"},"owners":[{"name":"uldis.sturms","email":"uldis.sturms@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"cdc","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/cdc-1.2.0.tgz_1487534407147_0.29064639704301953"},"_npmUser":{"name":"uldis.sturms","email":"uldis.sturms@gmail.com"},"_npmVersion":"4.1.2","_rev":"24-7b1c1eed575339c76d405433637da41c","_shasum":"3aca53f7b6cae17d2b9276185b3743a03b1d18a0","author":{"name":"Uldis Sturms","email":"uldis.sturms@gmail.com"},"bugs":{"url":"https://github.com/uldissturms/cdc/issues"},"directories":{},"dist-tags":{"latest":"1.2.0"},"dist":{"shasum":"3aca53f7b6cae17d2b9276185b3743a03b1d18a0","tarball":"https://registry.npmjs.org/cdc/-/cdc-1.2.0.tgz"},"maintainers":[{"name":"uldis.sturms","email":"uldis.sturms@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-19T20:00:09.155Z","created":"2016-04-06T12:45:16.095Z","1.0.0":"2016-04-06T12:45:16.095Z","0.0.1":"2016-12-05T02:04:37.434Z","0.0.2":"2016-12-05T02:27:53.175Z","0.0.3":"2016-12-05T09:37:37.736Z","0.0.4":"2016-12-05T10:06:53.918Z","0.0.5":"2016-12-05T10:16:17.401Z","0.0.6":"2016-12-05T14:51:32.450Z","0.0.7":"2016-12-05T22:44:33.349Z","0.0.8":"2016-12-15T09:34:05.912Z","0.0.9":"2016-12-15T15:29:02.977Z","0.1.0":"2016-12-18T23:02:43.297Z","0.1.1":"2016-12-18T23:14:23.523Z","0.1.2":"2016-12-22T20:45:16.038Z","1.0.1":"2016-12-29T00:01:12.966Z","1.0.2":"2016-12-29T15:33:59.669Z","1.0.3":"2016-12-29T16:13:55.357Z","1.0.4":"2016-12-29T16:40:02.934Z","1.0.5":"2016-12-29T16:53:05.195Z","1.0.6":"2016-12-29T16:56:13.892Z","1.0.7":"2016-12-29T17:46:06.615Z","1.1.0":"2016-12-30T17:59:23.153Z","1.1.1":"2016-12-30T18:15:00.945Z","1.2.0":"2017-02-19T20:00:09.155Z"},"users":{"uldis.sturms":true,"uldis.sturms~at~audatex.co.uk":true}}}