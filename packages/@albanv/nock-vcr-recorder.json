{"name":"@albanv/nock-vcr-recorder","version":"0.1.4","description":"A test framework agnostic vcr implementation that uses nock.","main":"lib/vcr.js","scripts":{"test":"rm -rf cassettes && node_modules/mocha/bin/mocha test/*-test.js "},"repository":"https://github.com/poetic/nock-vcr-recorder","keywords":["mocha","nock","testing","fixtures","mocking"],"license":"MIT","homepage":"https://github.com/poetic/nock-vcr-recorder","dependencies":{"bluebird":"^3.4.0","lodash":"^4.13.1","mkdirp":"^0.5.0","nock":"^8.0.0"},"devDependencies":{"express":"^4.13.4","mocha":"^2.5.1","request":"^2.73.0"},"gitHead":"f561c6d5eff20305d56d0c0271c1565769a74eec","versions":[{"number":"0.1.4","date":"2016-07-18T15:19:36.071Z"}],"readme":"# Nock VCR Recorder [![Build Status](https://travis-ci.org/poetic/nock-vcr-recorder.svg?branch=master)](https://travis-ci.org/poetic/nock-vcr-recorder)\n\nA test framework agnostic vcr implementation that uses\n[nock](https://github.com/pgte/nock). Can be used in isolation or test specific\nlibraries can be written around it.\n\n## Install\n\n```bash\nnpm install --save-dev nock-vcr-recorder\n```\n\n## Usage\n\nUse `vcr.useCassette` and pass in a callback with the test to run. All http\nrequests will be recorded using nock and stored in a cassettes directory for\nplayback on later test runs. It expects the callback to return a promise for\nasyncronous actions and it returns a promise that resolves when it's finished.\n\nExample using mocha:\n\n```js\nvar RSVP    = require('rsvp');\nvar request = RSVP.denodeify(require('request'));\nvar assert  = require('assert');\nvar vcr     = require('nock-vcr-recorder');\n\ndescribe('standard test', function() {\n  it('caches request', function() {\n    return vcr.useCassette('normal test - works', function() {\n      return request('http://localhost:4000/users').then(function() {\n        assert(true, 'request works');\n      });\n    });\n  });\n});\n\n// Usage with test specific options\n//\n// This test will not record the request to localhost:4000 and it will not use\n// any saved fixtures\ndescribe('normal test', function() {\n  it('works', function(done) {\n    return vcr.useCassette('normal test - works', {\n      excludeScope: 'localhost:4000'\n      mode: 'all'\n    }, function() {\n      return request('http://localhost:4000/users').then(function() {\n        assert(true, 'request works');\n      });\n    });\n  });\n});\n```\n\n## Configuration\n\nDefaults:\n\n```js\n{\n  // Don't record any requests to this scope\n  // It can be an array or string\n  excludeScope: ['localhost', '127.0.0.1', '0.0.0.0'],\n\n  // Re-record and overwrite your current fixtures\n  // Possible values: 'all'\n  mode: undefined, \n\n  // Write recorded fixtures when the test fails. We don't do this by default\n  writeOnFailure: false\n}\n```\n\nTo overide these you can call `vcr.config` with an object to\noverride them for ALL tests.\n\nYou also are able to pass in test specific options as the second parameter to\n`vcr.useCassette()`. See the \"Usage\" section above for an example.\n\n\n## Authors ##\n\n* [Jake Craige](http://twitter.com/jakecraige)\n\n## Versioning\n\nThis library follows [Semantic Versioning](http://semver.org)\n\n## Want to help?\n\nPlease do! We are always looking to improve this library. If you have any ideas\nplease open an issue or a pull requests and we'll work on getting them in.\n\n## Legal\n\n[Poetic Systems](http://poeticsystems.com), Inc &copy; 2014\n\n[@poeticsystems](http://twitter.com/poeticsystems)\n\n[Licensed under the MIT license](http://www.opensource.org/licenses/mit-license.php)\n\n","created":"2016-07-18T15:19:36.071Z","modified":"2016-07-18T15:19:36.071Z","lastPublisher":{"name":"albanv","email":"me@alban.io"},"owners":[{"name":"albanv","email":"me@alban.io"}],"other":{"_attachments":{},"_from":".","_id":"@albanv/nock-vcr-recorder","_nodeVersion":"6.2.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/nock-vcr-recorder-0.1.4.tgz_1468855173881_0.3791165971197188"},"_npmUser":{"name":"albanv","email":"me@alban.io"},"_npmVersion":"3.9.5","_rev":"1-6af1574fc5811cfdafd77dc1faf270ef","_shasum":"76879262c98db238610fc27240562158655345e2","author":{"name":"Jake Craige","email":"jake@poeticsystems.com"},"bugs":{"url":"https://github.com/poetic/nock-vcr-recorder/issues"},"directories":{},"dist-tags":{"latest":"0.1.4"},"dist":{"shasum":"76879262c98db238610fc27240562158655345e2","tarball":"http://registry.npmjs.org/@albanv/nock-vcr-recorder/-/nock-vcr-recorder-0.1.4.tgz"},"maintainers":[{"name":"albanv","email":"me@alban.io"}],"readmeFilename":"README.md","time":{"modified":"2016-07-18T15:19:36.071Z","created":"2016-07-18T15:19:36.071Z","0.1.4":"2016-07-18T15:19:36.071Z"}}}