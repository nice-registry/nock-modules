{"license":"Apache License, Version 2.0","name":"arhs-atlasboard","description":"Arhs-atlasBoard is an extension of Atlasboard from Atlassian. It allows to create dashboard, add/remove and configure widgets via the web interface.","version":"1.2.1","homepage":"https://bitbucket.org/nscheys/arhs-atlasboard","repository":"https://github.com/nscheys/arhs-atlasboard","engines":{"node":">=0.8"},"bin":{"arhs-atlasboard":"./lib/cli/cli.js"},"main":"./lib/atlasboard.js","dependencies":{"async":"0.9.0","cheerio":"0.17.0","connect-assets":"2.3.3","css":"2.0.0","ejs":"1.0.0","express":"^3.0.0","hardhat":"~0.0.7","mkdirp":"~0.5.0","moment":"2.7.0","nib":"1.0.3","nock":"~0.22.1","optimist":"~0.3.5","path":"0.4.9","pg":"1.1.0","read-package-json":"~1.1.1","request":"^2.53.0","semver":"~2.0.11","socket.io":"1.0.6","stylus":"0.47.1","temp":"0.4.0","tracer":"0.5.1","traverse":"^0.6.6","underscore":"1.6.0","xtend":"2.0.3"},"devDependencies":{"mocha":"1.8.1","expect.js":"0.1.2","rimraf":"2.1.4","sinon":"1.6.0","proxyquire":"0.4.1"},"preferGlobal":true,"keywords":["server","dashboard"],"scripts":{"test":"mocha -b test --reporter list --ignore-leaks"},"gitHead":"3eec401621f4eb4299e5ccd709515e1339909f22","versions":[{"number":"0.9.0","date":"2015-03-11T15:42:16.139Z"},{"number":"0.0.1","date":"2015-03-11T15:47:01.621Z"},{"number":"0.9.1","date":"2015-03-11T15:47:52.369Z"},{"number":"1.0.0","date":"2015-04-07T06:23:27.303Z"},{"number":"1.0.1","date":"2015-04-08T08:48:12.259Z"},{"number":"1.0.2","date":"2015-04-08T09:00:24.097Z"},{"number":"1.0.3","date":"2015-04-08T12:16:49.007Z"},{"number":"1.0.4","date":"2015-04-08T12:25:12.982Z"},{"number":"1.0.5","date":"2015-04-09T12:52:09.558Z"},{"number":"1.0.6","date":"2015-04-09T13:22:52.560Z"},{"number":"1.0.7","date":"2015-04-10T09:56:34.367Z"},{"number":"1.0.8","date":"2015-04-13T14:50:20.581Z"},{"number":"1.0.9","date":"2015-04-15T06:59:43.231Z"},{"number":"1.0.10","date":"2015-04-15T07:59:12.435Z"},{"number":"1.1.0","date":"2015-04-15T08:10:33.995Z"},{"number":"1.1.1","date":"2015-04-15T08:14:30.193Z"},{"number":"1.2.0","date":"2015-04-16T08:25:39.486Z"},{"number":"1.2.1","date":"2015-04-16T08:34:45.940Z"}],"readme":"[![arhs](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/arhs-group.png)](http://www.arhs-group.com/)\r\n\r\nProvided by the ArÎ·s group. [http://www.arhs-group.com/](http://www.arhs-group.com/)\r\n\r\n![Atlasboard](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/wallboard8x6.png)\r\n\r\n[https://bitbucket.org/nscheys/arhs-atlasboard](https://bitbucket.org/nscheys/arhs-atlasboard)\r\n\r\n##Requirements##\r\n\r\n+ Python 2.7\r\n+ Microsoft Framework 2.0 SDK\r\n+ Node.js\r\n\r\n##Installation##\r\n\r\n`npm install -g arhs-atlasboard`\r\n\r\n\r\n##Creating your first project##\r\n\r\nAfter installing arhs-atlasboard as a global module, you can generate a new fully functional project that contains a sample dashboard by doing the following : \r\n\r\n`arhs-atlasboard create`\r\n\r\nThis will create a directory called arhs-atlasboard in the current directory. Move to this directory and start the atlasboard server:\r\n\r\n\tcd arhs-atlasboard\r\n\tarhs-atlasboard start \r\n\r\nYou can now have access to your project's home page via [http://localhost:3000](http://localhost:3000). The project's home page allows you to create new dashboards and displays all the created dashboards.  \r\n\r\nYou can also directly access the example dashboard via [http://localhost:3000/dashboard](http://localhost:3000/dashboard) (login:\"dashboard\", password:\"password\").\r\n\r\n\r\n##Configuring your dashboard##\r\n\r\nThere are 2 ways to configure your dashboard (position of widgets, size of widgets, value of parameters, ...): \r\n\r\n+ Modify manually the JSON file containing the dashboard configuration. The configuration file for the sample project can be found at packages/default/dashboards/dashboard.json.\r\nFor more information on how to configure the dashboard, [check the wiki of Atlasboard. ](https://bitbucket.org/atlassian/atlasboard/wiki/Dashboards)\r\n+ Use the web interface provided by Arhs Atlasboard that allows to easily add, resize, remove and configure the widgets of your dashboard. See screens below.\r\n\r\n### Main screen ###\r\n\r\n![dashboardmain](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/dashboardmain.PNG)\r\n\r\n### Add widget popup ###\r\n\r\n![addwidget](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/addwidget.PNG)\r\n\r\nA list of available widgets is displayed along with a screenshot and a description of each widget.\r\n\r\n### Configure widget popup ###\r\n\r\n![configure](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/config.PNG)\r\n\r\nIn this popup, you can set the values for the configuration parameters of your widget or remove the widget from your dashboard.\r\n\r\n##Creating new jobs and widgets##\r\n\r\nArhs-Atlasboard comes with several widgets that you can reuse for your dashboard. However, following your needs, you may want to create your own widgets.\r\nFor that purpose, follow these three steps :\r\n\r\n1. Define the configuration parameters of the widget. More on that in the next section.\r\n2. Create the job that will collect the needed data. More information [here](https://bitbucket.org/atlassian/atlasboard/wiki/Jobs). \r\n3. Create the widget that will render the data provided by the job. More information [here](https://bitbucket.org/atlassian/atlasboard/wiki/Widgets).\r\n\r\n###Define widget parameters###\r\n\r\nWidgets parameters are defined in a JSON file located at config/atlasboard.json. It contains the following elements:\r\n\r\n+ `widgets.<widgetName>` contains the properties and parameters of the widget named <widgetName> :\r\n\r\n    + `title`: the widget title\r\n    + `job` : the name of the job corresponding to the widget\r\n\t+ `description` : A description of the widget\r\n\t+ `width` : Initial width of the widget (nb columns)\r\n\t+ `height` : Initial height of the widget (nb rows)\r\n\t+ `config` : An object containing the configuration parameters of the widget. For each parameter :\r\n\t\r\n\t\t+ `type`: Type of the parameter. Possible values : \"int\",\"float\",\"string\",\"array\",\"password\"\r\n\t\t+ `help`: Description of the parameter\r\n\t\t+ `defaultValue`: default value of the parameter (optional)\r\n\t\t+ `min` : Minimum value of the parameter (optional)\r\n\t\t+ `max` : Maximum value of the parameter (optional)\r\n\t\t+ `optional` : If true, the parameter is optional.\r\n\t\t+ `fields` : Only for parameters of type \"array\". Allows to define the name of the fields for the array elements.\r\n\t\t\r\n\t \r\n####Example config file####\r\n\t{\r\n\t  \"live-logging\" : {\r\n\t\t\"enabled\":false\r\n\t  },\r\n\t  \"widgets\":{                  \r\n\t\t\t\"vmstate\":{\r\n\t\t\t\t\"title\":\"VM State\",\r\n\t\t\t\t\"job\":\"vmstatejob\",\r\n\t\t\t\t\"description\":\"The widget allows to monitor the state (cpu, memory, disk space) of a list of virtual machines.\",\r\n\t\t\t\t\"width\":2,\r\n\t\t\t\t\"height\":2,\r\n\t\t\t\t\"config\":{\r\n\t\t\t\t\t\"interval\": {\"type\":\"int\", \"help\":\"The execution interval in seconds.\", \"defaultValue\":120, \"min\":1},\r\n\t\t\t\t\t\"vms\": {\"type\":\"array\", \"help\":\"The list of VM to monitor.\", \"fields\": [\"name\",\"host\"]},\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\"maxCpu\": {\"type\":\"float\", \"help\":\"The threshold (in %) above which the cpu load is considered critical\", \"defaultValue\":90,\"optional\":true, \"min\":0,\"max\":100},\r\n\t\t\t\t\t\"maxRam\": {\"type\":\"float\",\"help\":\"The threshold (in %) above which the ram usage is considered critical\", \"defaultValue\":90,\"optional\":true, \"min\":0,\"max\":100},\r\n\t\t\t\t\t\"minDiskGB\": {\"type\":\"float\",\"help\":\"The threshold (in Gb) under which the hard disk space left is considered critical\", \"defaultValue\":1,\"optional\":true, \"min\":0}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}                                                             \r\n\t  }\r\n\t}\r\n\t\r\n\r\n\r\n##Example widgets/jobs##\r\n\r\n\r\n###Builds overview###\r\nThe widget allows to monitor the status of a list of Jenkins build jobs. Only the last build results are shown.\r\n\r\n![builds](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/builds.png)\r\n\r\nParameters : \r\n\r\n+ `jenkinsUrl`: The url of the jenkins instance.\r\n+ `jobs`: The list of jobs to monitor.\r\n+ `username`: User name for authentication on Jenkins\r\n+ `apiKey`: API Token for authentication on Jenkins\r\n\r\n###Smoke tests###\r\nThe widget allows to monitor the status of the smoke tests and displays the failed tests.\r\n\r\n![smoke](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/smoke.png)\r\n\r\nParameters : \r\n\r\n+ `jenkinsUrl`: The url of the jenkins instance.\r\n+ `smokeJob`: The job that corresponds to the smoke tests.\r\n+ `limitFailed`: Maximum number of failed tests that are displayed on the screen.\r\n+ `username`: User name for authentication on Jenkins\r\n+ `apiKey`: API Token for authentication on Jenkins\r\n\r\n###Sonar###\r\nThe widget allows to monitor the sonar issues of a project. It shows the rules compliance, the nummber of issues and their criticality levels.\r\n\r\n![sonar](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/sonar.png)\r\n\r\nParameters : \r\n\r\n+ `jenkinsUrl`: The url of the jenkins instance.\r\n+ `sonarUrl`: The url of the sonar instance.\r\n+ `projectKey`: The project key of the monitored project\r\n+ `comparisonInterval`: The period of time used (in days) for comparing results. Ex: If the period is 14 days, the last sonar analysis is compared with the sonar analysis from 2 weeks ago.\r\n+ `complianceWarningThreshold`: The warning threshold (in %) for rules compliance. If the compliance is lower than the threshold, the compliance's value is displayed in orange.\r\n+ `complianceCriticalThreshold`: The critical threshold (in %) for rules compliance. If the compliance is lower than the threshold, the compliance's value is displayed in red.\r\n+ `username`: User name for authentication on Sonar\r\n+ `password`: Password for authentication on Sonar\r\n\r\n\r\n###Stash###\r\nThe widget displays the latest commits on a Git Stash repository.\r\n\r\n![stash](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/stash.png)\r\n\r\nParameters : \r\n\r\n+ `stash_server`: The url of the stash server\r\n+ `project`: The project key identifying the project that is monitored.\r\n+ `repo`: The name of the git repository\r\n+ `branch`: Branch identifier (ex: refs/heads/master)\r\n+ `username`: User name for authentication on the repository\r\n+ `password`: Password for authentication on the repository\r\n\r\n###Jira Issues###\r\nThe widget displays a list of jira issues filtered according to a particular criterion.\r\n\r\n![issues](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/issues.png)\r\n\r\nParameters :\r\n \r\n+ `jira_server`: The url of the jira server.\r\n+ `jql`: The jql expression for filtering the issues (ex : project = <projectName> AND status in (Open))\r\n+ `user`: User name for authentication on Jira\r\n+ `password`: Password for authentication on Jira\r\n\r\n###Issues in progress###\r\nThe widget shows the JIRA issues that are in progress for a particular sprint.\r\n\r\n![issuesinprogress](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/issuesinprogress.png)\r\n\r\nParameters : \r\n\r\n+ `jiraUrl`: The url of the jira instance\r\n+ `rapidViewId`: The rapid view id\r\n+ `user`: User name for authentication on Jira\r\n+ `password`: Password for authentication on Jira\r\n\r\n###Releases###\r\nThe widget shows information about the next planned release, in particular the remaining days before the release date.\r\n\r\n![releases](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/releases.png)\r\n\r\nParameters :\r\n \r\n+ `jiraUrl`: The url of the jira instance\r\n+ `projectCode`: The project code\r\n+ `warningThreshold`: If the number of days remaining before the deadline is lower than the threshold, it will be displayed in orange.\r\n+ `criticalThreshold`: If the number of days remaining before the deadline is lower than the threshold, it will be displayed in red.\r\n+ `user`: User name for authentication on Jira\r\n+ `password`: Password for authentication on Jira\r\n\r\n###Burndown chart###\r\nThe widget shows the burndown chart of a particular sprint.\r\n\r\n![burndown](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/burndown.png)\r\n\r\nParameters : \r\n\r\n+ `jiraUrl`: The url of the jira instance\r\n+ `rapidViewId`: The rapid view id\r\n+ `sprintId`: The sprint id\r\n+ `user`: User name for authentication on Jira\r\n+ `password`: Password for authentication on Jira\r\n\r\n###VM State###\r\nThe widget allows to monitor the state (cpu, memory, disk space) of a list of virtual machines.\r\n\r\n![vmstate](https://bitbucket.org/nscheys/arhs-atlasboard/raw/master/screenshots/vmstate.png)\r\n\r\nParameters : \r\n\r\n+ `vms`: The list of VM to monitor\r\n+ `maxCpu`: The threshold (in %) above which the cpu load is considered critical\r\n+ `maxRam`: The threshold (in %) above which the ram usage is considered critical\r\n+ `minDiskGB`: he threshold (in Gb) under which the hard disk space left is considered critical\r\n\r\n\r\nNote that each widget has a configuration parameter called \"interval\" which defines the refresh rate of the widget.\r\n\r\n\r\n","created":"2015-03-11T15:42:16.139Z","modified":"2015-04-16T08:34:45.940Z","lastPublisher":{"name":"scheysni","email":"test@gmail.com"},"owners":[{"name":"scheysni","email":"test@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"arhs-atlasboard","_npmUser":{"name":"scheysni","email":"test@gmail.com"},"_npmVersion":"1.4.28","_rev":"1-f8f58bb62d4c9fb8b5df8634f226c9bb","_shasum":"fde50c0284a35f9e9ad80df610201095abf6ded5","author":{"name":"Atlassian"},"contributors":[{"name":"Nicolas Scheys","email":"Nicolas Scheys <Nicolas.Scheys@arhs-developments.com"}],"directories":{},"dist-tags":{"latest":"1.2.1"},"dist":{"shasum":"fde50c0284a35f9e9ad80df610201095abf6ded5","tarball":"http://registry.npmjs.org/arhs-atlasboard/-/arhs-atlasboard-1.2.1.tgz"},"maintainers":[{"name":"scheysni","email":"test@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-04-16T08:34:45.940Z","created":"2015-03-11T15:42:16.139Z","0.9.0":"2015-03-11T15:42:16.139Z","0.0.1":"2015-03-11T15:47:01.621Z","0.9.1":"2015-03-11T15:47:52.369Z","1.0.0":"2015-04-07T06:23:27.303Z","1.0.1":"2015-04-08T08:48:12.259Z","1.0.2":"2015-04-08T09:00:24.097Z","1.0.3":"2015-04-08T12:16:49.007Z","1.0.4":"2015-04-08T12:25:12.982Z","1.0.5":"2015-04-09T12:52:09.558Z","1.0.6":"2015-04-09T13:22:52.560Z","1.0.7":"2015-04-10T09:56:34.367Z","1.0.8":"2015-04-13T14:50:20.581Z","1.0.9":"2015-04-15T06:59:43.231Z","1.0.10":"2015-04-15T07:59:12.435Z","1.1.0":"2015-04-15T08:10:33.995Z","1.1.1":"2015-04-15T08:14:30.193Z","1.2.0":"2015-04-16T08:25:39.486Z","1.2.1":"2015-04-16T08:34:45.940Z"}}}