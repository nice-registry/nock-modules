{"name":"mocha-nock-fixtures","version":"0.2.0","description":"A simple library that makes saving fixtures with nock and mocha easy.","main":"lib/describe-fixture.js","scripts":{"test":"rm -rf test/fixtures && node_modules/mocha/bin/mocha test/*-test.js "},"repository":"https://github.com/poetic/mocha-nock-fixtures","keywords":["mocha","nock","testing","fixtures","mocking"],"license":"MIT","homepage":"https://github.com/poetic/mocha-nock-fixtures","dependencies":{"lodash-node":"^2.4.1","mkdirp":"^0.5.0","nock":"^0.51.0"},"devDependencies":{"express":"^3.4.8","mocha":"^2.0.1","request":"~2.34.0","proxyquire":"~1.0.1"},"gitHead":"e60a7d69a460d76897f04f6f69aa6887d1a16fe2","versions":[{"number":"0.1.0","date":"2014-10-17T23:20:07.866Z"},{"number":"0.1.1","date":"2014-10-23T14:36:44.738Z"},{"number":"0.2.0","date":"2014-12-03T23:38:55.449Z"}],"readme":"# Mocha Nock Fixtures [![Build Status](https://travis-ci.org/poetic/mocha-nock-fixtures.svg?branch=master)](https://travis-ci.org/poetic/mocha-nock-fixtures)\n\n## About\n\nA simple library that makes saving fixtures with\n[nock](https://github.com/pgte/nock) and\n[mocha](http://visionmedia.github.io/mocha/) easy. Just\nuse `describeFixture` instead of `describe` and it will record outbound requests\nusing nock into `test/fixtures` and read from them the next time you run the\ntests.\n\n## Install\n\n```bash\nnpm install --save-dev mocha-nock-fixtures\n```\n\n## Usage\n\nUse `describeFixture` instead of `describe` and it will use nock to record all\nrequests into your `test/fixtures` directory. It also supports `.skip` and\n`.only` as mocha does.\n\n```js\nvar request         = require('request');\nvar assert          = require('assert');\nvar describeFixture = require('mocha-nock-fixtures');\n\ndescribeFixture('normal test', function() {\n  it('works', function(done) {\n    request('http://localhost:4000/users', function(err, res, body) {\n      assert(!err, 'was success');\n      done();\n    });\n  });\n\n  describe('some other test', function() {\n    // You can use mocha how you normally would to group tests\n  });\n});\n\ndescribeFixture.skip('skipped test', function() {\n  // Anything in here will be skipped\n});\n\ndescribeFixture.only('only test', function() {\n  // This will be the only test run\n});\n\n// Usage with test specific options\n//\n// This test will not record the request to localhost:4000 and anything it does\n// record it will also record the reqheaders\ndescribeFixture('normal test', {\n  excludeScope: 'localhost:4000',\n  recorder: {\n    enable_reqheaders_recording: true\n  }\n}, function() {\n  it('works', function(done) {\n    request('http://localhost:4000/users', function(err, res, body) {\n      assert(!err, 'was success');\n      done();\n    });\n  });\n\n  describe('some other test', function() {\n    // You can use mocha how you normally would to group tests\n  });\n});\n```\n\n## Configuration\n\nDefaults:\n\n```js\n{\n  // Don't record any requests to this scope\n  // It can be an array or string\n  excludeScope: ['localhost', '127.0.0.1', '0.0.0.0'],\n\n  // Re-record and overwrite your current fixtures\n  overwrite: false,\n\n  // Record fixtures when test fails\n  recordOnFailure: false,\n\n  // These options are passed to the nock recorder that runs behind the scenes\n  // to capture requests\n  recorder: {\n    output_objects:  true,\n    dont_print:      true\n  }\n}\n```\n\nTo overide these you can call `describeFixture.setDefaults` with an object to\noverride them for ALL tests. It must be called before any `describeFixture()` is\ncalled to work properly. The best place is in a test helper file.\n\nYou also are able to pass in test specific options as the last parameter to\n`describeFixture()`. See the \"Usage\" section above for an example.\n\n\n## Authors ##\n\n* [Jake Craige](http://twitter.com/jakecraige)\n\n## Versioning\n\nThis library follows [Semantic Versioning](http://semver.org)\n\n## Want to help?\n\nPlease do! We are always looking to improve this library. If you have any ideas\nplease open an issue or a pull requests and we'll work on getting them in.\n\n## Legal\n\n[Poetic Systems](http://poeticsystems.com), Inc &copy; 2014\n\n[@poeticsystems](http://twitter.com/poeticsystems)\n\n[Licensed under the MIT license](http://www.opensource.org/licenses/mit-license.php)\n\n","created":"2014-10-17T23:20:07.866Z","modified":"2015-08-07T02:32:51.040Z","lastPublisher":{"name":"jakecraige","email":"jake@poeticsystems.com"},"owners":[{"name":"jakecraige","email":"james.craige+npm@gmail.com"},{"name":"danielo","email":"dannytenaglias@gmail.com"},{"name":"poetic","email":"appteam@poeticsystems.com"}],"other":{"_attachments":{},"_from":".","_id":"mocha-nock-fixtures","_nodeVersion":"0.10.33","_npmUser":{"name":"jakecraige","email":"jake@poeticsystems.com"},"_npmVersion":"2.1.8","_rev":"1-127c3e49601eb4bc2c5ac1a3d1842164","_shasum":"fa6d2ec0b591c05a1dc15e8b6e5f2a44785cd515","author":{"name":"Jake Craige","email":"jake@poeticsystems.com"},"bugs":{"url":"https://github.com/poetic/mocha-nock-fixtures/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"fa6d2ec0b591c05a1dc15e8b6e5f2a44785cd515","tarball":"http://registry.npmjs.org/mocha-nock-fixtures/-/mocha-nock-fixtures-0.2.0.tgz"},"maintainers":[{"name":"jakecraige","email":"james.craige+npm@gmail.com"},{"name":"danielo","email":"dannytenaglias@gmail.com"},{"name":"poetic","email":"appteam@poeticsystems.com"}],"readmeFilename":"README.md","time":{"modified":"2015-08-07T02:32:51.040Z","created":"2014-10-17T23:20:07.866Z","0.1.0":"2014-10-17T23:20:07.866Z","0.1.1":"2014-10-23T14:36:44.738Z","0.2.0":"2014-12-03T23:38:55.449Z"}}}