{"name":"riak-dc","version":"0.3.2","description":"A very, very tiny interface to Riak","main":"lib/riak-dc.js","scripts":{"test":"mocha"},"repository":"https://github.com/janearc/riak-dc","keywords":["riak","synchronous","simple","promises","q"],"license":"CC0-1.0","dependencies":{"q":"*","mocha":"*","nock":"*","chai":"*","minimist":"*","log4js":"*","chai-as-promised":"*","xact-id-tiny":">=0.0.5","sendak-usage":">=0.0.3"},"homepage":"https://github.com/janearc/riak-dc","bin":{"init-riak.js":"bin/init-riak.js","riak-dc.js":"bin/riak-dc.js"},"gitHead":"b343d397e511f2b0f2fd56b0cfd036ad2ae44eba","versions":[{"number":"0.1.0","date":"2014-11-03T18:06:23.515Z"},{"number":"0.1.1","date":"2014-11-03T18:12:07.948Z"},{"number":"0.1.2","date":"2014-11-03T19:58:57.955Z"},{"number":"0.1.3","date":"2014-11-05T17:09:38.419Z"},{"number":"0.2.0","date":"2014-11-18T16:14:17.436Z"},{"number":"0.2.1","date":"2014-11-29T21:13:06.052Z"},{"number":"0.2.2","date":"2014-11-29T21:23:50.374Z"},{"number":"0.2.3","date":"2014-11-29T21:45:01.750Z"},{"number":"0.2.5","date":"2015-01-05T08:28:21.147Z"},{"number":"0.2.6","date":"2015-01-23T20:02:28.344Z"},{"number":"0.2.7","date":"2015-01-23T20:20:40.137Z"},{"number":"0.2.8","date":"2015-02-09T03:12:22.273Z"},{"number":"0.2.9","date":"2015-02-10T20:19:40.317Z"},{"number":"0.3.0","date":"2015-02-23T23:19:54.301Z"},{"number":"0.3.1","date":"2015-03-17T18:18:54.891Z"},{"number":"0.3.2","date":"2016-12-11T00:53:05.782Z"}],"readme":"riak-dc\n=======\n\nSo, Basho does not have an official javascript interface to Riak. However, there\nis this [riak-js](http://riakjs.com/) thing. I found it to be poorly documented,\nand the interface was not suitable for very small programs (I write command-line\ntools, rather than web-front-end-ish type things). I wanted something\nsynchronous, something simple, that wouldn't take up too much space in my code.\n\nAccordingly, I wrote a tiny little wrapper around `http`, and here is the product.\n\nIt is my hope that the code behind this never actually exceeds the length of the\ndocumentation & test suite, and that anyone should be able to just\n`npm install riak-dc` and be coding against a Riak quickly.\n\n### Exported Functions\n\n* `Riak.init( hostname, port, proxy )`\n  - Takes two arguments: `hostname`, and `port`, which are what you would\n  expect them to be. Note that this call is optional, and defaults are `localhost`\n  and `8098`, respectively. If you wish to use an http proxy, you may pass an\n  object that looks like `{ host: 'localhost', port: '3128' }` and `riak-dc`\n  will attempt to use this proxy for all calls. You may also set the\n  environment variables `HTTP_PROXY_HOST` and `HTTP_PROXY_PORT`. Using `init()`\n  will override any environment variables you may have set.\n\n* `Riak.ping()`\n  - Takes no arguments, returns a true value if the server gives a 200 response,\n  and something false otherwise.\n\n* `Riak.get_keys( bucket )`\n  - Takes a single argument, the name of the bucket you'd like keys\n  for, and returns a promise to a list of the keys in that bucket.\n  *Note that Riak does not care if this bucket does not exist.* If you ask for\n  the keys from a non-existent bucket, Riak will dutifully tell you the list of\n  keys in that bucket is `[]`, which is what `get_keys` will return to you here.\n\n* `Riak.get_tuple( bucket, key )`\n  - Takes two arguments, the name of the bucket and key you wish to\n  have the value for. This is returned as a promised object, and will be whatever\n  Riak has stored. Typically this is JSON, but you will need to parse that\n  yourself (such as `JSON.parse(tuple)`), as it can be anything.\n  *In the event that Riak has stored a 0-byte tuple:* (that is, the bucket/key pair\n  are valid, the HTTP request returns 200, but the record is empty), you will\n  receive an Error. This is not strictly an error condition, but it is helpful to\n  know that the request itself was at least successful (whereas returning nothing\n  is not helpful).\n\n* `Riak.get_buckets( )`\n  - Takes no arguments, and returns a promise of a list of the\n  buckets Riak knows about.\n\n* `Riak.put_tuple( bucket, tuple, key )`\n  - Riak is very helpful in that it will provide you a key for the things you would\n  store. So while in order to store something you must provide a bucket and the\n  thing you would store (the tuple), the `key` argument is optional. If you supply\n  a key, that will be provided as Riak for the tuple you have asked to store.\n  User-supplied keys are useful for [key filters](http://docs.basho.com/riak/latest/dev/using/keyfilters/),\n  if hierarchically-named keys is something you want.\n  If you have omitted a key for storing the tuple, you will be returned a promise\n  for the key that Riak has provided.\n\n* `Riak.del_tuple( bucket, key )`\n  - Should you wish to remove a tuple from your Riak, you must specify a bucket and\n  a key. Returns what Riak returns; in the case you have tried to remove a tuple\n  Riak doesn't know about, Riak will return an Error.\n\nauthor\n====\n\n[@janearc](https://github.com/janearc), jane@cpan.org\n","created":"2014-11-03T18:06:23.515Z","modified":"2016-12-11T00:53:05.782Z","lastPublisher":{"name":"janearc","email":"jane.arc@pobox.com"},"owners":[{"name":"janearc","email":"jane@cpan.org"}],"other":{"_attachments":{},"_from":".","_id":"riak-dc","_nodeVersion":"7.2.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/riak-dc-0.3.2.tgz_1481417585553_0.441770913079381"},"_npmUser":{"name":"janearc","email":"jane.arc@pobox.com"},"_npmVersion":"3.10.9","_rev":"2-3fd8485b1e6bae67cbb724ca07eaed94","_shasum":"093cbbe1ced1a3a4244545499204cc68a909b454","author":{"name":"Jane Arc","email":"jane@cpan.org","url":"http://github.com/janearc"},"bugs":{"url":"https://github.com/janearc/riak-dc/issues"},"directories":{"test":"test","bin":"bin"},"dist-tags":{"latest":"0.3.2"},"dist":{"shasum":"093cbbe1ced1a3a4244545499204cc68a909b454","tarball":"http://registry.npmjs.org/riak-dc/-/riak-dc-0.3.2.tgz"},"maintainers":[{"name":"janearc","email":"jane@cpan.org"}],"readmeFilename":"README.md","time":{"modified":"2016-12-11T00:53:05.782Z","created":"2014-11-03T18:06:23.515Z","0.1.0":"2014-11-03T18:06:23.515Z","0.1.1":"2014-11-03T18:12:07.948Z","0.1.2":"2014-11-03T19:58:57.955Z","0.1.3":"2014-11-05T17:09:38.419Z","0.2.0":"2014-11-18T16:14:17.436Z","0.2.1":"2014-11-29T21:13:06.052Z","0.2.2":"2014-11-29T21:23:50.374Z","0.2.3":"2014-11-29T21:45:01.750Z","0.2.5":"2015-01-05T08:28:21.147Z","0.2.6":"2015-01-23T20:02:28.344Z","0.2.7":"2015-01-23T20:20:40.137Z","0.2.8":"2015-02-09T03:12:22.273Z","0.2.9":"2015-02-10T20:19:40.317Z","0.3.0":"2015-02-23T23:19:54.301Z","0.3.1":"2015-03-17T18:18:54.891Z","0.3.2":"2016-12-11T00:53:05.782Z"}}}