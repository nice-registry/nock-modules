{"name":"taskcluster-lib-testing","version":"1.0.4","description":"taskcluster-lib-testing","license":"MPL-2.0","scripts":{"compile":"babel-compile -p taskcluster src:lib test:.test","prepublish":"npm run compile","pretest":"npm run compile","test":"mocha .test/testing/*_test.js"},"files":["src","lib"],"repository":"https://github.com/taskcluster/taskcluster-lib-testing","dependencies":{"aws-sdk":"^2.2.28","azure-table-node":"1.4.1","babel-runtime":"^6.1.18","debug":"^2.2.0","express":"4.9.0","express-sslify":"0.1.0","hawk":"2.3.0","lodash":"2.4.1","nock":"^4.0.0","promise":"^7.0.4","slugid":"^1.0.3","superagent":"0.18.2","superagent-hawk":"0.0.4","superagent-promise":"0.1.2","taskcluster-client":"0.23.4","taskcluster-lib-validate":"^1.1.1","uuid":"^2.0.1"},"devDependencies":{"babel-compile":"^2.0.0","babel-eslint":"^6.0.2","babel-preset-taskcluster":"^3.0.0","eslint-config-taskcluster":"^2.0.0","eslint-plugin-taskcluster":"^1.0.0","mocha":"2.0.1","source-map-support":"^0.4.0","taskcluster-lib-api":"^1.3.1","taskcluster-lib-app":"^1.0.0","taskcluster-lib-config":"^0.8.8"},"main":"./lib/testing.js","gitHead":"cc0818195f70b7686defd75550dc77ac3f0ca242","homepage":"https://github.com/taskcluster/taskcluster-lib-testing#readme","versions":[{"number":"0.8.10","date":"2015-11-18T12:15:11.249Z"},{"number":"0.8.11","date":"2015-11-18T14:40:13.205Z"},{"number":"0.9.0","date":"2016-01-12T15:46:40.940Z"},{"number":"0.9.1","date":"2016-01-14T14:31:59.593Z"},{"number":"0.9.2","date":"2016-01-14T21:04:17.029Z"},{"number":"0.10.0","date":"2016-02-05T21:44:52.210Z"},{"number":"0.10.1","date":"2016-02-10T03:07:02.211Z"},{"number":"0.10.2","date":"2016-02-22T21:36:46.872Z"},{"number":"0.11.0","date":"2016-03-24T00:07:25.552Z"},{"number":"0.11.1","date":"2016-03-24T00:17:17.615Z"},{"number":"1.0.0","date":"2016-05-16T18:27:46.024Z"},{"number":"1.0.1","date":"2016-07-08T21:50:08.477Z"},{"number":"1.0.3","date":"2016-08-28T21:27:39.990Z"},{"number":"1.0.4","date":"2017-02-24T03:29:09.248Z"}],"readme":"TaskCluster-Lib-Testing\n=======================\n\nSupport for testing TaskCluster components.\n\nThis module contains a number of utilities that facilitate testing TaskCluster\ncomponents.  It is typically installed as a devDependency, so it is not used in\nproduction code.\n\nSee the source for detailed documentation.\n\nPulseTestReceiver\n-----------------\n\nA utility for tests written in mocha, that makes it very easy to wait for a\nspecific pulse message.  This uses real pulse messages, so pulse credentials\nwill be required.\n\n**Example:**\n```js\nsuite(\"MyTests\", function() {\n  let credentials = {\n    username:     '...',  // Pulse username\n    password:     '...'   // Pulse password\n  };\n  let receiver = new testing.PulseTestReceiver(credentials, mocha)\n\n  test(\"create task message arrives\", async function() {\n    var taskId = slugid.v4();\n\n    // Start listening for a message with the above taskId, giving\n    // it a local name (here, `my-create-task-message`)\n    await receiver.listenFor(\n      'my-create-task-message',\n      queueEvents.taskCreated({taskId: taskId})\n    );\n\n    // We are now listen for a message with the taskId\n    // So let's create a task with it\n    await queue.createTask(taskId, {...});\n\n    // Now we wait for the message to arrive\n    let message = await receiver.waitFor('my-create-task-message');\n  });\n});\n```\n\nThe `receiver` object will setup an PulseConnection before all tests and close\nthe PulseConnection after all tests. This should make tests run faster.  All\ninternal state, ie. the names given to `listenFor` and `waitFor` will be reset\nbetween all tests.\n\nschemas\n-------\n\nTest schemas with a positive and negative test cases.\n\nThe method should be called within a `suite`, as it will call the mocha `test`\nfunction to define a test for each schema case.\n\n * `validator` - {}  // options to pass to the [taskcluster-lib-validate](https://github.com/taskcluster/taskcluster-lib-validate) constructor\n * `cases` - array of test cases\n * `basePath` -  base path for relative pathnames in test cases (default `path.join(__dirname, 'validate')`)\n * `schemaPrefix` - prefix used to resolve schema references; usually `http://schemas.taskcluster.net`\n\nEach test case looks like this:\n\n```js\n{\n  schema:   'svc/v7/frobnicate-foo.json', // JSON schema identifier to test against (appended to schemaPrefix)\n  path:     'test-file.json',             // Path to test file (relative to basePath)\n  success:  true || false                 // true if validation should succeed; false if it should fail\n}\n```\n\nfakeauth\n--------\n\nA fake for the auth service to support testing APIs without requiring\nproduction credentials, using Nock.\n\nThis object intercepts requests to the auth service's `authenticateHawk` method\nand return a response based on the given `clients`, instead. Note that\naccessTokens are not checked -- the fake simply controls access based on\nclientId or the scopes in a temporary credential or supplied with\nauthorizedScopes.\n\nTo start the mock, call `testing.fakeauth.start(clients)` in your suite's\n`setup` method. Clients has the form\n\n```js\n{\n \"clientId1\": [\"scope1\", \"scope2\"],\n \"clientId2\": [\"scope1\", \"scope3\"],\n}\n```\n\nCall `testing.fakeauth.stop()` in your test suite's `teardown` method to stop the HTTP interceptor.\n\nUtilities\n---------\n\n### Sleep\n\nThe `sleep` function returns a promise that resolves after a delay.\n\n**NOTE** tests that depend on timing are notoriously unreliable, and suggest\npoorly-isolated tests. Consider writing the tests to use a \"fake\" clock or to\npoll for the expected state.\n\n### Poll\n\nThe `poll` function will repeatedly call a function that returns a promise\nuntil the promise is resolved without errors.\n\n","created":"2015-11-18T12:15:11.249Z","modified":"2017-05-22T14:27:13.668Z","lastPublisher":{"name":"taskcluster-bot","email":"taskcluster-accounts@mozilla.com"},"owners":[{"email":"jopsen@gmail.com","name":"jonasfj"},{"email":"taskcluster-accounts@mozilla.com","name":"taskcluster-bot"},{"email":"eli@eliperelman.com","name":"eliperelman"},{"email":"wander.lairson@gmail.com","name":"walac"},{"email":"dustin@cs.uchicago.edu","name":"djmitche"},{"email":"bstack@mozilla.com","name":"bstack"},{"email":"pmoore@mozilla.com","name":"pmoore"},{"email":"garndt@mozilla.com","name":"gregarndt"},{"email":"john@johnford.org","name":"jhford"},{"email":"selenamarie@gmail.com","name":"selenamarie"}],"other":{"_attachments":{},"_from":".","_id":"taskcluster-lib-testing","_nodeVersion":"0.12.18","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/taskcluster-lib-testing-1.0.4.tgz_1487906947311_0.6155595432501286"},"_npmUser":{"name":"taskcluster-bot","email":"taskcluster-accounts@mozilla.com"},"_npmVersion":"2.15.11","_rev":"5-7fb89d52d47ffcf4f2013181eb997614","_shasum":"d7ea3070b6a6a4cdaf73812033ed388172a00923","author":{"name":"Jonas Finnemann Jensen","email":"jopsen@gmail.com"},"bugs":{"url":"https://github.com/taskcluster/taskcluster-lib-testing/issues"},"directories":{},"dist-tags":{"latest":"1.0.4"},"dist":{"shasum":"d7ea3070b6a6a4cdaf73812033ed388172a00923","tarball":"https://registry.npmjs.org/taskcluster-lib-testing/-/taskcluster-lib-testing-1.0.4.tgz"},"maintainers":[{"email":"jopsen@gmail.com","name":"jonasfj"},{"email":"taskcluster-accounts@mozilla.com","name":"taskcluster-bot"},{"email":"eli@eliperelman.com","name":"eliperelman"},{"email":"wander.lairson@gmail.com","name":"walac"},{"email":"dustin@cs.uchicago.edu","name":"djmitche"},{"email":"bstack@mozilla.com","name":"bstack"},{"email":"pmoore@mozilla.com","name":"pmoore"},{"email":"garndt@mozilla.com","name":"gregarndt"},{"email":"john@johnford.org","name":"jhford"},{"email":"selenamarie@gmail.com","name":"selenamarie"}],"readmeFilename":"README.md","time":{"modified":"2017-05-22T14:27:13.668Z","created":"2015-11-18T12:15:11.249Z","0.8.10":"2015-11-18T12:15:11.249Z","0.8.11":"2015-11-18T14:40:13.205Z","0.9.0":"2016-01-12T15:46:40.940Z","0.9.1":"2016-01-14T14:31:59.593Z","0.9.2":"2016-01-14T21:04:17.029Z","0.10.0":"2016-02-05T21:44:52.210Z","0.10.1":"2016-02-10T03:07:02.211Z","0.10.2":"2016-02-22T21:36:46.872Z","0.11.0":"2016-03-24T00:07:25.552Z","0.11.1":"2016-03-24T00:17:17.615Z","1.0.0":"2016-05-16T18:27:46.024Z","1.0.1":"2016-07-08T21:50:08.477Z","1.0.3":"2016-08-28T21:27:39.990Z","1.0.4":"2017-02-24T03:29:09.248Z"}}}