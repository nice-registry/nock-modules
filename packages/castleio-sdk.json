{"name":"castleio-sdk","version":"0.3.5","description":"The castle.io SDK for Node.js","main":"src/index-compiled.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["castle","castleio","sdk","castle.io"],"license":"MIT","dependencies":{"babel-cli":"^6.4.5","babel-preset-es2015":"^6.3.13","jasmine":"^2.4.1","nock":"^7.0.2","restify":"^4.0.3"},"gitHead":"7f86bc891b4a4d2e6dfc2daab40571d3853c010d","versions":[{"number":"0.1.0","date":"2016-01-27T20:40:29.477Z"},{"number":"0.2.0","date":"2016-01-27T21:26:23.052Z"},{"number":"0.3.0","date":"2016-02-10T09:49:51.787Z"},{"number":"0.2.1","date":"2016-02-10T09:52:05.262Z"},{"number":"0.3.2","date":"2016-02-10T09:57:36.889Z"},{"number":"0.3.3","date":"2016-02-10T10:13:22.824Z"},{"number":"0.3.4","date":"2016-02-10T10:18:23.926Z"},{"number":"0.3.5","date":"2016-02-10T10:47:44.998Z"}],"readme":"# Node.js SDK for Castle\n\n**[Castle](https:castle.io) adds real-time monitoring of your authentication stack, instantly notifying you and your users on potential account hijacks.**\n\n## Installation\n\nObtain the latest version of the SDK with npm:\n\n```bash\nnpm install castleio-sdk\n```\n\n## Getting Started: The Vanilla Way\n\n### Initializing\n\n```javascript\nimport Castle from 'castleio-sdk';\nvar castle = new Castle({apiSecret : 'YOUR-SECRET-HERE'});\n```\n\n### Tracking Events\n\n```javascript\n\ncastle.trackEvent({\n    event     : Castle.Events.LOGIN_SUCCEEDED, //This can also be a string EX: $login.failed\n    user_id   : 2473, //The ID of your user\n    details   : { //Optional\n            email: 'castle@castle.io'\n    },\n    userAgent : 'Really long user agent string here',\n    cookie    : 'The cookie the client side javascript created with the name __cid',\n    ip        : '0.0.0.0',\n    headers   : {} Tons of headers here\n}).then(obj => {\n    //Handle success\n    //Note that \"obj\" is almost always just {}\n}).catch(e => {\n    //Handle error\n});\n```\n\n### Identifying Users\n\n```javascript\ncastle.identify({\n    user_id   : 2473, //The ID of your user\n    user_data   : { //Optional\n            email: 'castle@castle.io'\n    },\n    userAgent : 'Really long user agent string here',\n    cookie    : 'The cookie the client side javascript created with the name __cid',\n    ip        : '0.0.0.0',\n    headers   : {} Tons of headers here\n}).then(obj => {\n    //Handle success\n    //Note that \"obj\" is almost always just {}\n}).catch(e => {\n    //Handle error\n});\n```\n\n## Getting Started: The Express Way\n\nThis is the way to go if you're using Express 4.x\n\n### Initializing\n\n```javascript\nimport Castle from 'castleio-sdk'\napp.use(Castle.express({apiSecret : 'YOUR-SECRET-HERE'}));\n```\n\n### Tracking Events\n\n```javascript\n(request, response, next) => {\n    request.castleTrackEvent({\n        event     : request.castleEvents.LOGIN_SUCCEEDED,\n        user_id   : 2473, //The ID of your user\n        details   : { //Optional\n            email: 'castle@castle.io'\n        }.\n    }).then(obj => {\n        //Handle success\n        //Note that \"obj\" is almost always just {}\n    }).catch(e => {\n        //Handle error\n        next(e)\n    });\n}\n```\n\n### Identifying Users\n\n```javascript\n(request, response, next) => {\n    request.castleIdentify({\n        user_id   : 2473, The ID of your user\n        user_data   : { //Optional\n            email: 'castle@castle.io'\n        }\n    }).then(obj => {\n        //Handle success\n        //Note that \"obj\" is almost always just {}\n    }).catch(e => {\n        //Handle error\n        next(e)\n    });\n}\n```\n\n## Options\n\nThe Castle object accepts these options upon initialization\n\n| Code                             | Description     |Default    |\n|:---------------------------------|:----------------|:----------|\n|apiKey|Your api key. This is currently unused|null|\n|apiSecret|Your api secret. This is used for authenticating you|undefined|\n|apiUrl|The endpoint you want to send your api requests to|https://api.castle.io|\n|disableClientUserAgent|Wether or not you want to send SDK info and OS information to castle for analytics|false|\n\n## Events\n\nThese are the events Available through Castle.Events\n\n| Code                             | Description     |Default    |\n|:---------------------------------|:----------------|:----------|\n|   LOGIN_SUCCEEDED           | $login.succeeded | Record when a user attempts to log in|\n|   LOGIN_FAILED              | $login.failed | Record when a user logs out|\n|   LOGOUT_SUCCEEDED          | $logout.succeeded | Record when a user logs out|\n|   REGISTRATION_SUCCEEDED    | $registration.succeeded | Capture account creation, both when a user signs up as well as when created manually by an administrator|\n|   REGISTRATION_FAILED       | $registration.failed | Record when an account failed to be created|\n|   EMAIL_CHANGE_REQUESTED    | $email_change.requested | An attempt was made to change a user’s email|\n|   EMAIL_CHANGE_SUCCEEDED    | $email_change.succeeded | The user completed all of the steps in the email address change process and the email was successfully changed|\n|   EMAIL_CHANGE_FAILED       | $email_change.failed | Use to record when a user failed to change their email address|\n|   PASSWORD_RESET_REQUESTED  | $password_reset.requested | An attempt was made to reset a user’s password|\n|   PASSWORD_RESET_SUCCEEDED  | $password_reset.succeeded | The user completed all of the steps in the password reset process and the password was successfully reset. Password resets do not required knowledge of the current password|\n|   PASSWORD_RESET_FAILED     | $password_reset.failed | Use to record when a user failed to reset their password|\n|   PASSWORD_CHANGE_SUCCEEDED | $password_change.succeeded |Use to record when a user changed their password. This event is only logged when users change their own password|\n|   PASSWORD_CHANGE_FAILED    | $password_change.failed | Use to record when a user failed to change their password|\n|   CHALLENGE_REQUESTED       | $challenge.requested | Record when a user is prompted with additional verification, such as two-factor authentication or a captcha|\n|   CHALLENGE_SUCCEEDED       | $challenge.succeeded | Record when additional verification was successful|\n|   CHALLENGE_FAILED          | $challenge.failed |Record when additional verification failed|\n\n## Errors\nWhenever something unexpected happens, a error is created and returned. Here's a list of errors\nthat we're shamefully created\n\n| Code                             | Description     |\n|:---------------------------------|:----------------|\n|MISSING_EVENT_NAME|You've missed the event parameter for the trackEvent function|\n|INVALID_HTTP_STATUS_CODE|The HTTP Code returned by the Castle API was unexpected|\n","created":"2016-01-27T20:40:29.477Z","modified":"2016-02-10T10:47:44.998Z","lastPublisher":{"name":"javaportals","email":"me@javaportals.io"},"owners":[{"name":"javaportals","email":"me@javaportals.io"}],"other":{"_attachments":{},"_from":".","_id":"castleio-sdk","_nodeVersion":"3.3.1","_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/castleio-sdk-0.3.5.tgz_1455101263237_0.8138399317394942"},"_npmUser":{"name":"javaportals","email":"me@javaportals.io"},"_npmVersion":"3.5.3","_rev":"1-48bc017ff0e910214e1551f743ad641f","_shasum":"c4e1ee014dfb60b7525c8ea9097f041b21a9d94d","author":{"name":"Nicolaj Rørvig","email":"me@javaportals.io"},"directories":{},"dist-tags":{"latest":"0.3.5"},"dist":{"shasum":"c4e1ee014dfb60b7525c8ea9097f041b21a9d94d","tarball":"http://registry.npmjs.org/castleio-sdk/-/castleio-sdk-0.3.5.tgz"},"maintainers":[{"name":"javaportals","email":"me@javaportals.io"}],"readmeFilename":"README.md","time":{"modified":"2016-02-10T10:47:44.998Z","created":"2016-01-27T20:40:29.477Z","0.1.0":"2016-01-27T20:40:29.477Z","0.2.0":"2016-01-27T21:26:23.052Z","0.3.0":"2016-02-10T09:49:51.787Z","0.2.1":"2016-02-10T09:52:05.262Z","0.3.2":"2016-02-10T09:57:36.889Z","0.3.3":"2016-02-10T10:13:22.824Z","0.3.4":"2016-02-10T10:18:23.926Z","0.3.5":"2016-02-10T10:47:44.998Z"}}}